{"version":3,"sources":["FireStore/fbConfig.js","Context/userProvider.js","Components/SignedINlinks.js","Components/SignedOutLinks.js","Components/NavBar.js","Components/Notifications.js","Components/Project.js","Context/postProvider.js","Components/ProjectList.js","Components/Dashboard.js","Components/Summary.js","Components/SignIn.js","Components/SignUp.js","Components/CreateProject.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","signInWtihGoogle","signInWithPopup","signOut","firestore","UserContext","createContext","UserProvider","state","user","unsubscribeFromAuth","componentDidMount","a","async","onAuthStateChanged","gotUser","setState","email","name","displayName","photo","photoURL","this","children","props","Provider","value","Component","SignedINlinks","className","to","onClick","Consumer","split","notation","charAt","React","SignedOutLinks","NavBar","Notifications","DelButton","styled","button","Project","Delete","id","doc","delete","forceUpdate","project","title","author","Date","date","toString","PostContext","PostProvider","projects","unsubscribeFromFireStore","collection","onSnapshot","snap","docs","forEach","d","push","data","ProjectList","map","element","key","Dashboard","Summary","content","read","match","params","ref","GoogleButton","Buttons","div","SignIN","pass","handelChange","e","target","handelSubmit","preventDefault","onSubmit","htmlFor","type","onChange","width","alt","src","SignUp","fname","lname","console","log","CreateProject","post","now","add","history","App","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a86c4618.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDpDb_eJZJM1hUNspLnMbxn9XPirwnaH4M',\n  authDomain: 'redux-try.firebaseapp.com',\n  databaseURL: 'https://redux-try.firebaseio.com',\n  projectId: 'redux-try',\n  storageBucket: 'redux-try.appspot.com',\n  messagingSenderId: '760691451449',\n  appId: '1:760691451449:web:4ee44525668c92e0634fe8',\n  measurementId: 'G-10MZ3V5GNN'\n};\n\nfirebase.initializeApp(firebaseConfig);\n// .settings({ timestampsInSnapshots: true });\n\nexport const auth = firebase.auth();\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWtihGoogle = () => auth.signInWithPopup(provider);\nexport const signOut = () => auth.signOut();\n\nexport const firestore = firebase.firestore();\nexport default firebase;\n","import React, { Component, createContext } from 'react';\nimport { auth } from '../FireStore/fbConfig';\n\nexport const UserContext = createContext();\n\nclass UserProvider extends Component {\n  state = { user: null };\n  unsubscribeFromAuth = null;\n  componentDidMount = async () => {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(gotUser => {\n      //   console.log(gotUser);\n      let user = null;\n      if (gotUser == null) this.setState({ user });\n      else {\n        user = {\n          email: gotUser.email,\n          name: gotUser.displayName,\n          photo: gotUser.photoURL\n        };\n        this.setState({ user });\n      }\n    });\n  };\n  componentWillUnmount() {\n    if (this.unsubscribeFromAuth) this.unsubscribeFromAuth();\n  }\n  render() {\n    const { children } = this.props;\n    const { user } = this.state;\n\n    return <UserContext.Provider value={user}>{children}</UserContext.Provider>;\n  }\n}\nexport default UserProvider;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { signOut } from '../FireStore/fbConfig';\nimport { UserContext } from '../Context/userProvider';\n\nclass SignedINlinks extends React.Component {\n  render() {\n    return (\n      <ul className=\"right\">\n        <li>\n          <NavLink to=\"/create\">New project</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/\" onClick={signOut}>\n            Logout\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n            <UserContext.Consumer>\n              {user => {\n                const name = user.name.split(' ');\n                let notation = '';\n                notation += name[0].charAt(0);\n                if (name[1]) notation += name[1].charAt(0);\n                return notation;\n              }}\n            </UserContext.Consumer>\n          </NavLink>\n        </li>\n      </ul>\n    );\n  }\n}\nexport default SignedINlinks;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nclass SignedOutLinks extends React.Component {\n  render() {\n    return (\n      <ul className=\"right\">\n        <li>\n          <NavLink to=\"/signIn\">Login</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/signUp\">Sign UP</NavLink>\n        </li>\n      </ul>\n    );\n  }\n}\nexport default SignedOutLinks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedINlinks from './SignedINlinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { UserContext } from '../Context/userProvider';\n\nclass NavBar extends React.Component {\n  render() {\n    return (\n      <nav className=\"nav-wrapper grey darken-3\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"brand-logo left\">\n            HOZE\n          </Link>\n          <UserContext.Consumer>\n            {user => (user ? <SignedINlinks /> : <SignedOutLinks />)}\n          </UserContext.Consumer>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react'\n\nclass Notifications extends Component {\n  render() {\n    return <div className=\"section\">Notifications</div>\n  }\n}\nexport default Notifications\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { firestore } from '../FireStore/fbConfig';\nimport { UserContext } from '../Context/userProvider';\nimport styled from 'styled-components';\n\nconst DelButton = styled.button`\n  margin-left: 1rem;\n`;\n\nclass Project extends Component {\n  Delete = async id => {\n    await firestore.doc(`projects/${id}`).delete();\n    this.forceUpdate();\n  };\n  render() {\n    const { project } = this.props;\n    return (\n      <UserContext.Consumer>\n        {user => (\n          <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n              <span className=\"card-title\">{project.title}</span>\n              <p>Posted By {project.author}</p>\n              <p className=\"grey-text margin-bottom-s3\">\n                Date {new Date(project.date).toString()}\n              </p>\n              <Link to={`/project/${project.id}`}>read more</Link>\n              {user && user.email === project.email && (\n                <DelButton\n                  className=\"btn-floating btn-small waves-effect waves-light red\"\n                  onClick={() => this.Delete(project.id)}\n                >\n                  <i className=\"material-icons\">delete</i>\n                </DelButton>\n              )}\n            </div>\n          </div>\n        )}\n      </UserContext.Consumer>\n    );\n  }\n}\nexport default Project;\n","import React, { Component, createContext } from 'react';\nimport { firestore } from '../FireStore/fbConfig';\n\nexport const PostContext = createContext();\n\nclass PostProvider extends Component {\n  state = {\n    projects: []\n  };\n  unsubscribeFromFireStore = null;\n  componentDidMount = async () => {\n    await firestore.collection('projects').onSnapshot(snap => {\n      let projects = [];\n      snap.docs.forEach(d => projects.push({ id: d.id, ...d.data() }));\n      this.setState({ projects });\n    });\n  };\n  componentWillUnmount() {\n    if (this.unsubscribeFromFireStore) this.unsubscribeFromFireStore();\n  }\n  render() {\n    const { children } = this.props;\n    const { projects } = this.state;\n\n    return (\n      <PostContext.Provider value={projects}>{children}</PostContext.Provider>\n    );\n  }\n}\nexport default PostProvider;\n","import React, { Component } from 'react';\nimport Project from './Project';\n// import { connect } from 'react-redux'\nimport { PostContext } from '../Context/postProvider';\n\nfunction errData(err) {\n  alert(err);\n}\nclass ProjectList extends Component {\n  state = {\n    projects: []\n  };\n\n  render() {\n    return (\n      <div className=\"project-list section\">\n        <PostContext.Consumer>\n          {projects =>\n            projects.map(element => (\n              <Project project={element} key={element.id} />\n            ))\n          }\n        </PostContext.Consumer>\n      </div>\n    );\n  }\n}\n// const mapStateToProps = store => {\n//   return {\n//     projects: store.project.projects\n//   }\n// }\n// export default connect(mapStateToProps)(ProjectList)\n\nexport default ProjectList;\n","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from './ProjectList';\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport { firestore } from '../FireStore/fbConfig';\n\nclass Summary extends Component {\n  state = {\n    content: '',\n    title: '',\n    read: 0\n  };\n  componentDidMount = async () => {\n    const ref = await firestore.doc(`projects/${this.props.match.params.id}`);\n    await ref.onSnapshot(snap => {\n      this.setState(snap.data());\n      // ref.update({ read: snap.data().read + 1 });\n    });\n  };\n  render() {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">Project {this.state.title}</span>\n            <span className=\"card-content\">{this.state.content}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Summary;\n","import React, { Component } from 'react';\nimport { signInWtihGoogle } from '../FireStore/fbConfig';\nimport styled from 'styled-components';\n\nconst GoogleButton = styled.button`\n  border: 3px solid #4285f4;\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  * {\n    margin-right: 1rem;\n  }\n  img {\n    height: 100%;\n  }\n`;\nconst Buttons = styled.div`\n  display: flex;\n  * {\n    margin-right: 1rem;\n  }\n`;\n\nclass SignIN extends Component {\n  state = {\n    email: '',\n    pass: ''\n  };\n  handelChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handelSubmit = e => {\n    e.preventDefault();\n    // console.log(this.state);\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={e => this.handelSubmit(e)}>\n          <h5 className=\"grey-text text-darken-3\">Sign in</h5>\n          <div className=\"inpt-field\">\n            <label htmlFor=\"email\">email</label>\n            <input\n              type=\"email\"\n              value={this.state.email}\n              onChange={e => this.handelChange(e)}\n              id=\"email\"\n            />\n          </div>\n          <div className=\"inpt-field\">\n            <label htmlFor=\"pass\">Password</label>\n            <input\n              type=\"password\"\n              value={this.state.pass}\n              onChange={e => this.handelChange(e)}\n              id=\"pass\"\n            />\n          </div>\n          <Buttons>\n            <button className=\"btn pink lighten-1 section\">Submit</button>\n            <GoogleButton onClick={signInWtihGoogle}>\n              <img\n                width=\"20px\"\n                alt=\"Google sign-in\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/512px-Google_%22G%22_Logo.svg.png\"\n              />\n              <div> Login with Google</div>\n            </GoogleButton>\n          </Buttons>\n        </form>\n      </div>\n    );\n  }\n}\nexport default SignIN;\n","import React, { Component } from 'react'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    pass: '',\n    fname: '',\n    lname: ''\n  }\n  handelChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handelSubmit = e => {\n    e.preventDefault()\n    console.log(e)\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={e => this.handelSubmit(e)}>\n          <h5 className=\"grey-text text-darken-3\">Sign up</h5>{' '}\n          <div className=\"inpt-field\">\n            <label htmlFor=\"pass\">First Name</label>\n            <input\n              type=\"text\"\n              value={this.state.fname}\n              onChange={e => this.handelChange(e)}\n              id=\"fname\"\n            />\n          </div>{' '}\n          <div className=\"inpt-field\">\n            <label htmlFor=\"pass\">Last Name</label>\n            <input\n              type=\"text\"\n              value={this.state.lname}\n              onChange={e => this.handelChange(e)}\n              id=\"lname\"\n            />\n          </div>\n          <div className=\"inpt-field\">\n            <label htmlFor=\"email\">email</label>\n            <input\n              type=\"email\"\n              value={this.state.email}\n              onChange={e => this.handelChange(e)}\n              id=\"email\"\n            />\n          </div>\n          <div className=\"inpt-field\">\n            <label htmlFor=\"pass\">Password</label>\n            <input\n              type=\"password\"\n              value={this.state.name}\n              onChange={e => this.handelChange(e)}\n              id=\"pass\"\n            />\n          </div>\n          <button className=\"btn pink lighten-1 section\">Submit</button>\n        </form>\n      </div>\n    )\n  }\n}\nexport default SignUp\n","import React, { Component } from 'react';\n// import { createProject } from '../Actions/ProjectActons';\nimport { firestore } from '../FireStore/fbConfig';\nimport { UserContext } from '../Context/userProvider';\n// import { connect } from 'react-redux';\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: '',\n    read: 0,\n    author: null\n  };\n\n  handelChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handelSubmit = async (e, user) => {\n    e.preventDefault();\n    // console.log(user);\n    const post = {\n      ...this.state,\n      ...user,\n      author: user.name,\n      date: Date.now()\n    };\n    await firestore.collection('projects').add(post);\n    this.setState({\n      title: '',\n      content: ''\n    });\n    this.props.history.push('/');\n    // this.props.createProject(this.state);\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <UserContext.Consumer>\n          {user => (\n            <form className=\"white\" onSubmit={e => this.handelSubmit(e, user)}>\n              <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n              <div className=\"inpt-field\">\n                <label htmlFor=\"title\">title</label>\n                <input\n                  type=\"text\"\n                  value={this.state.title}\n                  onChange={this.handelChange}\n                  id=\"title\"\n                />\n              </div>\n              <div className=\"inpt-field\">\n                <label htmlFor=\"content\">content</label>\n                <textarea\n                  className=\"materialize-textarea\"\n                  onChange={e => this.handelChange(e)}\n                  id=\"content\"\n                  value={this.state.content}\n                />\n              </div>\n              <button className=\"btn pink lighten-1 section\">Submit</button>\n            </form>\n          )}\n        </UserContext.Consumer>\n      </div>\n    );\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     createProject: project => dispatch(createProject(project))\n//   };\n// };\n\n// export default connect(null, mapDispatchToProps)(CreateProject);\nexport default CreateProject;\n","import React, { Fragment } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './Components/NavBar';\nimport Dashboard from './Components/Dashboard';\nimport Summary from './Components/Summary';\nimport SignIN from './Components/SignIn';\nimport SignUp from './Components/SignUp';\nimport CreateProject from './Components/CreateProject';\nimport { UserContext } from './Context/userProvider';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <NavBar />\n        <UserContext.Consumer>\n          {user =>\n            user ? (\n              <Switch>\n                <Route path=\"/create\" component={CreateProject} />\n                <Route path=\"/project/:id\" component={Summary} />\n                <Route path=\"/\" component={Dashboard} />\n              </Switch>\n            ) : (\n              <Switch>\n                <Route path=\"/signIn\" component={SignIN} />\n                <Route path=\"/signUp\" component={SignUp} />\n                <Route path=\"/project/:id\" component={Summary} />\n                <Route path=\"/\" component={Dashboard} />\n              </Switch>\n            )\n          }\n        </UserContext.Consumer>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport PostProvider from './Context/postProvider';\nimport UserProvider from './Context/userProvider';\n\n// import { createStore, applyMiddleware } from 'redux';\n// import rootReducer from './reducers/rootReducer';\n// import { Provider } from 'react-redux';\n// import thunk from 'redux-thunk';\n// import fbConfig from './FireStore/fbConfig';\n// import { reduxFirestore, getFirestore } from 'redux-firestore';\n// import { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\n\n// const y = reactReduxFirebase(fbConfig);\n// const x = reduxFirestore(fbConfig);\n\n// const store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  // <Provider store={store}>\n  <UserProvider>\n    <PostProvider>\n      <App />\n    </PostProvider>\n  </UserProvider>,\n  // </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}